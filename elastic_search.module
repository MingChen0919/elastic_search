<?php

	require_once '/data/www/html/hardwoods_dev_ming/htdocs/sites/all/modules/DRUPAL_ELASTIC_SEARCH/vendor/autoload.php';
	require_once 'api/elastic_search.api.php';
//	require_once '/data/www/html/hardwoods_dev_ming/htdocs/sites/all/modules/custom/elastic_indexing/elastic_indexing.inc';

set_time_limit(0);

/**
 * Implementation of hook_menu().
 */
function elastic_search_menu(){
	$pre = 'admin/config/search/elastic_search';
	$items[$pre] = array(
		'title' => 'Elastic search',
		'description' => 'Configure elastic indexing and build search interface',
		'page callback' => 'drupal_goto',
		'page arguments' => array($pre . '/indexing'),
		'access callback' => 'user_access',
		'access arguments' => array('administer users'),
	);


    $items[$pre.'/indexing'] = array(
        'title' => t('Indexing'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('elastic_indexing_form'),
        'access callback' => 'user_access',
        'access arguments' => array('administer users'),
        'type' => MENU_LOCAL_TASK,
		'file' => 'includes/elastic_indexing_form.inc',
		'weight' => 0,
    );

	$items[$pre.'/search'] = array(
		'title' => t('Build search block'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('elastic_search_form'),
		'access callback' => TRUE,
		'type' => MENU_LOCAL_TASK,
		'file' => 'includes/elastic_search_form.inc',
		'weight' => 1,
	);

    $items[$pre.'/search_block'] = array(
        'title' => t('Elastic search blocks'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('elastic_search_blocks_form'),
        'access callback' => TRUE,
        'type' => MENU_LOCAL_TASK,
        'file' => 'includes/elastic_search_blocks_form.inc',
        'weight' => 2,
    );

    $items['elastic_search'] = array(
        'title' => t('Elastic search interface'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('elastic_search_interface_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'file' => 'includes/elastic_search_interface_form.inc',
    );

	$items['elastic_search/search_results'] = array(
		'title' => t('Elasticsearch results'),
		'page callback' => '_elastic_search_results',
		'access callback' => TRUE, // 'user_access',
	//	'access arguments' => array('administer users'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'includes/_elastic_search_results.inc',
	);


	return $items;
}





/**
 * template preprocess function for elastic_search_form
 */
function template_preprocess_elastic_search_form(&$variables){

    foreach($variables['form'] as $key=>$value){
        $variables['elastic_search_form'][$key] = render($variables['form'][$key]);
    }   

    $variables['children'] = drupal_render_children($variables['form']);
}

/**
 * template preprocess function for elastic_indexing_form
 */
function elastic_search_preprocess_elastic_indexing_form(&$variables){
	
	foreach($variables['form'] as $key=>$value){
		$variables['elastic_indexing_form'][$key] = render($variables['form'][$key]);
	}

	$variables['children'] = drupal_render_children($variables['form']);
}



/**
 * implement hok_cron().
 */
function elastic_search_cron() {
	// Default to an hourly interval. Of course, cron has to be running at least
	// hourly for this to work.
	$interval = variable_get('elastic_indexing_interval', 60);
	// We usually don't want to act every time cron runs (which could be every
	// minute) so keep a time for the next run in a variable.
	if (time() >= variable_get('elastic_indexing_next_execution', 0)) {
    	// This is a silly example of a cron job.
    	// It just makes it obvious that the job has run without
    	// making any changes to your database.
		if(drupal_cron_run()){
    		watchdog('Elastic indexing', 'Elastic indexing cron ran successfully');
    		if (TRUE) {
      			drupal_set_message(t('cron_example executed at %time', array('%time' => date_iso8601(time(0)))));
    		}
    		variable_set('elastic_indexing_next_execution', time() + $interval);
		}
  	}
}





/**
 * implement hook_cron_queue_info()
 */
function elastic_search_cron_queue_info(){
	$queues['elastic_queue'] = array(
		'worker callback' => 'elasticindexing_queue_item',
		'time' => 60 * 60 * 2,	## the amount of time drupal spends on calling the worker function. 
	);

	return $queues;
}



function elasticindexing_queue_item($item){

	$client = new Elasticsearch\Client();
	$params['index'] = str_replace('chado.', '', $_SESSION['selected_table']);
	$params['type'] = $params['index'];
	$sql = $item->sql;
	$result = db_query($sql);
	foreach($result as $record){
		$doc = objectToArray($record);
		$params['body'] = $doc;
//		$client->index($params);
		$client->index($params);
	}

}






//unset($_SESSION['all_selected_fields']);
//unset($_SESSION['query']);
//unset($_SESSION['keywords']);
//unset($_SESSION['common_field']);
//unset($_SESSION['search_output_table']);
unset($params);






